// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuanLyLopHoc.Models;

#nullable disable

namespace QuanLyLopHoc.Migrations
{
    [DbContext(typeof(SMContext))]
    partial class SMContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuanLyLopHoc.Models.Entities.DetailTranscript", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("CHAR(32)");

                    b.Property<string>("TranscriptId")
                        .HasColumnType("CHAR(32)");

                    b.Property<decimal>("DiemCC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DiemCK")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DiemTX")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("UserId", "TranscriptId");

                    b.HasIndex("TranscriptId");

                    b.ToTable("DetailTranscript");
                });

            modelBuilder.Entity("QuanLyLopHoc.Models.Entities.Message", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("CHAR(32)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("NTEXT");

                    b.Property<string>("ReceiverId")
                        .IsRequired()
                        .HasColumnType("CHAR(32)");

                    b.Property<DateTime>("SendTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SenderId")
                        .IsRequired()
                        .HasColumnType("CHAR(32)");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("QuanLyLopHoc.Models.Entities.Post", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("CHAR(32)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("NTEXT");

                    b.Property<DateTime>("PostTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("CHAR(32)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("CHAR(32)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("QuanLyLopHoc.Models.Entities.PostType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("PostType");
                });

            modelBuilder.Entity("QuanLyLopHoc.Models.Entities.StudentSubject", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("CHAR(32)");

                    b.Property<string>("SubjectId")
                        .HasColumnType("CHAR(32)");

                    b.HasKey("UserId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("StudentSubject");
                });

            modelBuilder.Entity("QuanLyLopHoc.Models.Entities.Subject", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("CHAR(32)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NTEXT");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("QuanLyLopHoc.Models.Entities.TeacherSubject", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("CHAR(32)");

                    b.Property<string>("SubjectId")
                        .HasColumnType("CHAR(32)");

                    b.HasKey("UserId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("TeacherSubject");
                });

            modelBuilder.Entity("QuanLyLopHoc.Models.Entities.TeacherTranscript", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("CHAR(32)");

                    b.Property<string>("TranscriptId")
                        .HasColumnType("CHAR(32)");

                    b.HasKey("UserId", "TranscriptId");

                    b.HasIndex("TranscriptId");

                    b.ToTable("TeacherTranscript");
                });

            modelBuilder.Entity("QuanLyLopHoc.Models.Entities.Transcript", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("CHAR(32)");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("CHAR(32)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Transcript");
                });

            modelBuilder.Entity("QuanLyLopHoc.Models.Entities.UserClass", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType(" CHAR(32)");

                    b.Property<string>("About")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("NCHAR(255)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(320)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("School")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("UserClass");
                });

            modelBuilder.Entity("QuanLyLopHoc.Models.Entities.DetailTranscript", b =>
                {
                    b.HasOne("QuanLyLopHoc.Models.Entities.Transcript", "Transcript")
                        .WithMany("Details")
                        .HasForeignKey("TranscriptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyLopHoc.Models.Entities.UserClass", "Student")
                        .WithMany("Details")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Transcript");
                });

            modelBuilder.Entity("QuanLyLopHoc.Models.Entities.Message", b =>
                {
                    b.HasOne("QuanLyLopHoc.Models.Entities.UserClass", "Receiver")
                        .WithMany("Received")
                        .HasForeignKey("ReceiverId")
                        .IsRequired();

                    b.HasOne("QuanLyLopHoc.Models.Entities.UserClass", "Sender")
                        .WithMany("Sent")
                        .HasForeignKey("SenderId")
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("QuanLyLopHoc.Models.Entities.Post", b =>
                {
                    b.HasOne("QuanLyLopHoc.Models.Entities.Subject", "Subject")
                        .WithMany("Posts")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyLopHoc.Models.Entities.PostType", "Type")
                        .WithMany("Posts")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyLopHoc.Models.Entities.UserClass", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("Type");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuanLyLopHoc.Models.Entities.StudentSubject", b =>
                {
                    b.HasOne("QuanLyLopHoc.Models.Entities.Subject", "Subject")
                        .WithMany("StudentSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyLopHoc.Models.Entities.UserClass", "Users")
                        .WithMany("StudentSubjects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("QuanLyLopHoc.Models.Entities.TeacherSubject", b =>
                {
                    b.HasOne("QuanLyLopHoc.Models.Entities.Subject", "Subject")
                        .WithMany("TeacherSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyLopHoc.Models.Entities.UserClass", "User")
                        .WithMany("TeacherSubjects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuanLyLopHoc.Models.Entities.TeacherTranscript", b =>
                {
                    b.HasOne("QuanLyLopHoc.Models.Entities.Transcript", "Transcript")
                        .WithMany("TeacherTranscripts")
                        .HasForeignKey("TranscriptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyLopHoc.Models.Entities.UserClass", "User")
                        .WithMany("TeacherTranscripts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transcript");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuanLyLopHoc.Models.Entities.Transcript", b =>
                {
                    b.HasOne("QuanLyLopHoc.Models.Entities.Subject", "Subject")
                        .WithMany("Transcripts")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("QuanLyLopHoc.Models.Entities.PostType", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("QuanLyLopHoc.Models.Entities.Subject", b =>
                {
                    b.Navigation("Posts");

                    b.Navigation("StudentSubjects");

                    b.Navigation("TeacherSubjects");

                    b.Navigation("Transcripts");
                });

            modelBuilder.Entity("QuanLyLopHoc.Models.Entities.Transcript", b =>
                {
                    b.Navigation("Details");

                    b.Navigation("TeacherTranscripts");
                });

            modelBuilder.Entity("QuanLyLopHoc.Models.Entities.UserClass", b =>
                {
                    b.Navigation("Details");

                    b.Navigation("Posts");

                    b.Navigation("Received");

                    b.Navigation("Sent");

                    b.Navigation("StudentSubjects");

                    b.Navigation("TeacherSubjects");

                    b.Navigation("TeacherTranscripts");
                });
#pragma warning restore 612, 618
        }
    }
}
