@using X.PagedList.Mvc.Core;
@using X.PagedList;

@model IPagedList<QuanLyLopHoc.Models.Entities.Subject>

@{
    ViewData["Title"] = "Danh sách môn học đã tham gia";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="grid place-items-center pt-4 pb-2 md:grid-cols-2 rounded-t-lg backdrop-blur-sm bg-gray-600/30">
    <h1 class="mr-auto mx-3 text-lg font-bold text-blue-500">Danh sách môn học của bạn</h1>
    <form>
        <form>
            <label for="default-search" class="mb-2 text-sm font-medium text-gray-900 sr-only dark:text-white">Search</label>
            <div class="relative w-96 ml-auto">
                <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
                    <svg aria-hidden="true" class="w-5 h-5 text-gray-500 " fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg>
                </div>
                <input type="search" id="search" name="search" class="block w-full p-4 pl-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500  dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Search Mockups, Logos..." required>
                <button type="submit" class="text-white absolute right-2.5 bottom-2.5 bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-4 py-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Search</button>
            </div>
        </form>
    </form>
</div>
@if (Model != null)
{
    <div class="grid grid-cols-2 lg:grid-cols-5 md:grid-cols-4 gap-4 w-fit">
        @foreach (var item in Model)
        {
            <div class="m-4 max-w-xs bg-white border rounded-lg shadow dark:border-gray-700">
                <div class="h-full flex flex-col">
                    <a href="Subject/Details/@item.Id">
                        <img class="rounded-t-lg"
                             src="https://flowbite.com/docs/images/blog/image-1.jpg"
                             alt="">
                    </a>
                    <a href="Subject/Details/@item.Id"
                        class="mt-auto h-full block max-w-sm p-6 bg-white border border-gray-200 rounded-b-lg shadow hover:bg-gray-100 ">
                        <h5 class="mb-2 text-2xl font-bold tracking-tight text-gray-900">
                            @Html.DisplayFor(modelItem => item.SubjectName)
                        </h5>
                        <p class="font-normal text-ellipsis overflow-hidden text-gray-700 dark:text-gray-400">
                            @if (@Html.DisplayFor(modelItem => item.Description) != null)
                            {
                                @Html.DisplayFor(modelItem => item.Description)
                            }
                        </p>
                    </a>
                </div>
            </div>
        }
    </div>
    @if (Model.Count() > 0)
    {
        @Html.PagedListPager((IPagedList)Model, page=> Url.Action("Index", new {page = page}),
    new X.PagedList.Web.Common.PagedListRenderOptions{
        //DisplayItemSliceAndTotal = true,
        ContainerDivClasses = new []{"navigation flex items-center justify-center "},
        UlElementClasses = new[]{"inline-flex -space-x-px"},
        LiElementClasses = new[]{""},
        PageClasses = new[]{"page-link px-3 py-2 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 "},
    })
    }
}
@*<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.SubjectName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Creator)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.SubjectName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Creator.Id)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
*@